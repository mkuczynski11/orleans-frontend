{"ast":null,"code":"import { HTTP_INTERCEPTORS, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/token-storage.service\";\nimport * as i2 from \"../_services/auth.service\";\nconst TOKEN_HEADER_KEY = 'Authorization';\nexport class AuthInterceptor {\n  constructor(tokenService, authService) {\n    this.tokenService = tokenService;\n    this.authService = authService;\n    this.isRefreshing = false;\n    this.refreshTokenSubject = new BehaviorSubject(null);\n  }\n  intercept(req, next) {\n    let authReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      authReq = this.addTokenHeader(req, token);\n    }\n    return next.handle(authReq).pipe(catchError(error => {\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\n        return this.handle401Error(authReq, next);\n      }\n      return throwError(error);\n    }));\n  }\n  handle401Error(request, next) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n      const token = this.tokenService.getRefreshToken();\n      if (token) return this.authService.refreshToken(token).pipe(switchMap(token => {\n        this.isRefreshing = false;\n        this.tokenService.saveToken(token.accessToken);\n        this.refreshTokenSubject.next(token.accessToken);\n        return next.handle(this.addTokenHeader(request, token.accessToken));\n      }), catchError(err => {\n        this.isRefreshing = false;\n        this.tokenService.signOut();\n        return throwError(err);\n      }));\n    }\n    return this.refreshTokenSubject.pipe(filter(token => token !== null), take(1), switchMap(token => next.handle(this.addTokenHeader(request, token))));\n  }\n  addTokenHeader(request, token) {\n    return request.clone({\n      headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)\n    });\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.TokenStorageService), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}\nexport const authInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n}];","map":{"version":3,"names":["HTTP_INTERCEPTORS","HttpErrorResponse","BehaviorSubject","throwError","catchError","filter","switchMap","take","TOKEN_HEADER_KEY","AuthInterceptor","constructor","tokenService","authService","isRefreshing","refreshTokenSubject","intercept","req","next","authReq","token","getToken","addTokenHeader","handle","pipe","error","url","includes","status","handle401Error","request","getRefreshToken","refreshToken","saveToken","accessToken","err","signOut","clone","headers","set","_","i0","ɵɵinject","i1","TokenStorageService","i2","AuthService","_2","factory","ɵfac","authInterceptorProviders","provide","useClass","multi"],"sources":["/home/mkuczyns/desktop/MGR/orleans-frontend/src/app/_helpers/auth.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { AuthService } from '../_services/auth.service';\n\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(private tokenService: TokenStorageService, private authService: AuthService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<Object>> {\n    let authReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      authReq = this.addTokenHeader(req, token);\n    }\n\n    return next.handle(authReq).pipe(catchError(error => {\n      if (error instanceof HttpErrorResponse && !authReq.url.includes('auth/signin') && error.status === 401) {\n        return this.handle401Error(authReq, next);\n      }\n\n      return throwError(error);\n    }));\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      const token = this.tokenService.getRefreshToken();\n\n      if (token)\n        return this.authService.refreshToken(token).pipe(\n          switchMap((token: any) => {\n            this.isRefreshing = false;\n\n            this.tokenService.saveToken(token.accessToken);\n            this.refreshTokenSubject.next(token.accessToken);\n            \n            return next.handle(this.addTokenHeader(request, token.accessToken));\n          }),\n          catchError((err) => {\n            this.isRefreshing = false;\n            \n            this.tokenService.signOut();\n            return throwError(err);\n          })\n        );\n    }\n\n    return this.refreshTokenSubject.pipe(\n      filter(token => token !== null),\n      take(1),\n      switchMap((token) => next.handle(this.addTokenHeader(request, token)))\n    );\n  }\n\n  private addTokenHeader(request: HttpRequest<any>, token: string) {\n    return request.clone({ headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}