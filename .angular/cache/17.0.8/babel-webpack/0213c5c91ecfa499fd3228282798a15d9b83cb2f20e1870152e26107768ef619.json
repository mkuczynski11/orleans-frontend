{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_form_3_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, LoginComponent_form_3_div_13_div_1_Template, 2, 0, \"div\", 16)(2, LoginComponent_form_3_div_13_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r4 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors.minlength);\n  }\n}\nfunction LoginComponent_form_3_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Login failed: \", ctx_r6.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4, 5);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const _r1 = i0.ɵɵreference(1);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(_r1.form.valid && ctx_r9.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 6)(3, \"label\", 7);\n    i0.ɵɵtext(4, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 8, 9);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.form.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, LoginComponent_form_3_div_7_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 11);\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.form.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, LoginComponent_form_3_div_13_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 6)(15, \"button\", 14);\n    i0.ɵɵtext(16, \" Login \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 6);\n    i0.ɵɵtemplate(18, LoginComponent_form_3_div_18_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r2 = i0.ɵɵreference(6);\n    const _r4 = i0.ɵɵreference(12);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors && _r1.submitted);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.form.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.errors && _r1.submitted);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", _r1.submitted && ctx_r0.isLoginFailed);\n  }\n}\nexport class LoginComponent {\n  // roles: string[] = [];\n  constructor(authService, tokenStorage) {\n    this.authService = authService;\n    this.tokenStorage = tokenStorage;\n    this.form = {\n      email: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n  }\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      // this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit() {\n    const {\n      email,\n      password\n    } = this.form;\n    this.authService.login(email, password).subscribe(data => {\n      this.tokenStorage.saveToken(data.accessToken);\n      this.tokenStorage.saveRefreshToken(data.refreshToken);\n      // this.tokenStorage.saveUser(data);\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      // this.roles = this.tokenStorage.getUser().roles;\n      this.reloadPage();\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isLoginFailed = true;\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenStorageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"btn\", \"btn-primary\", \"btn-block\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 19, 5, \"form\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n    styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_form_3_div_13_div_1_Template","LoginComponent_form_3_div_13_div_2_Template","ɵɵadvance","ɵɵproperty","_r4","errors","required","minlength","ɵɵtextInterpolate1","ctx_r6","errorMessage","ɵɵlistener","LoginComponent_form_3_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r10","_r1","ɵɵreference","ctx_r9","ɵɵnextContext","ɵɵresetView","form","valid","onSubmit","LoginComponent_form_3_Template_input_ngModelChange_5_listener","$event","ctx_r11","email","LoginComponent_form_3_div_7_Template","LoginComponent_form_3_Template_input_ngModelChange_11_listener","ctx_r12","password","LoginComponent_form_3_div_13_Template","LoginComponent_form_3_div_18_Template","ctx_r0","_r2","submitted","isLoginFailed","LoginComponent","constructor","authService","tokenStorage","isLoggedIn","ngOnInit","getToken","login","subscribe","data","saveToken","accessToken","saveRefreshToken","refreshToken","reloadPage","err","error","message","window","location","reload","_","ɵɵdirectiveInject","i1","AuthService","i2","TokenStorageService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","LoginComponent_form_3_Template"],"sources":["/home/mkuczyns/desktop/MGR/orleans-frontend/src/app/login/login.component.ts","/home/mkuczyns/desktop/MGR/orleans-frontend/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    email: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  // roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      // this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { email, password } = this.form;\n\n    this.authService.login(email, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveRefreshToken(data.refreshToken);\n        // this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        // this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n      <img\n        id=\"profile-img\"\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        class=\"profile-img-card\"\n      />\n      <form\n        *ngIf=\"!isLoggedIn\"\n        name=\"form\"\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\n        #f=\"ngForm\"\n        novalidate\n      >\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"email\"\n            [(ngModel)]=\"form.email\"\n            required\n            #email=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"email.errors && f.submitted\"\n          >\n            Email is required!\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            [(ngModel)]=\"form.password\"\n            required\n            minlength=\"6\"\n            #password=\"ngModel\"\n          />\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"password.errors && f.submitted\"\n          >\n            <div *ngIf=\"password.errors.required\">Password is required</div>\n            <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\">\n            Login\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <div\n            class=\"alert alert-danger\"\n            role=\"alert\"\n            *ngIf=\"f.submitted && isLoginFailed\"\n          >\n            Login failed: {{ errorMessage }}\n          </div>\n        </div>\n      </form>\n  \n      <!-- <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n        Logged in as {{ roles }}.\n      </div> -->\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}